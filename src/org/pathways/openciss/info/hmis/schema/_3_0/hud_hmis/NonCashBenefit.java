//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.19 at 05:35:09 PM EDT 
//


package org.pathways.openciss.info.hmis.schema._3_0.hud_hmis;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for nonCashBenefit complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="nonCashBenefit">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="NonCashBenefitID" type="{http://www.hmis.info/schema/3_0/HUD_HMIS.xsd}iDIndex"/>
 *         &lt;sequence maxOccurs="unbounded">
 *           &lt;element name="NonCashSourceCode" type="{http://www.hmis.info/schema/3_0/HUD_HMIS.xsd}nonCashSourceCode"/>
 *           &lt;element name="NonCashSourceOther" type="{http://www.hmis.info/schema/3_0/HUD_HMIS.xsd}string50" minOccurs="0"/>
 *           &lt;element name="ReceivingNonCashSource" type="{http://www.hmis.info/schema/3_0/HUD_HMIS.xsd}twoVal"/>
 *         &lt;/sequence>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "nonCashBenefit", propOrder = {
    "nonCashBenefitID",
    "nonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource"
})
public class NonCashBenefit {

    @XmlElement(name = "NonCashBenefitID", required = true)
    protected IDIndex nonCashBenefitID;
    @XmlElements({
        @XmlElement(name = "NonCashSourceOther", required = true, type = String50 .class),
        @XmlElement(name = "ReceivingNonCashSource", required = true, type = TwoVal.class),
        @XmlElement(name = "NonCashSourceCode", required = true, type = NonCashSourceCode.class)
    })
    protected List<Object> nonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource;

    /**
     * Gets the value of the nonCashBenefitID property.
     * 
     * @return
     *     possible object is
     *     {@link IDIndex }
     *     
     */
    public IDIndex getNonCashBenefitID() {
        return nonCashBenefitID;
    }

    /**
     * Sets the value of the nonCashBenefitID property.
     * 
     * @param value
     *     allowed object is
     *     {@link IDIndex }
     *     
     */
    public void setNonCashBenefitID(IDIndex value) {
        this.nonCashBenefitID = value;
    }

    /**
     * Gets the value of the nonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String50 }
     * {@link TwoVal }
     * {@link NonCashSourceCode }
     * 
     * 
     */
    public List<Object> getNonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource() {
        if (nonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource == null) {
            nonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource = new ArrayList<Object>();
        }
        return this.nonCashSourceCodeAndNonCashSourceOtherAndReceivingNonCashSource;
    }

}
