-- ----------------------------------------------------------------------------
-- MySQL Workbench Migration
-- Migrated Schemata: mydb, OPENHMIS2
-- Source Schemata: , OPENHMIS2
-- Created: Mon Feb  9 16:23:41 2015
-- ----------------------------------------------------------------------------

SET FOREIGN_KEY_CHECKS = 0;;

-- ----------------------------------------------------------------------------
-- Schema mydb
-- ----------------------------------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;

-- ----------------------------------------------------------------------------
-- Schema OPENHMIS2
-- ----------------------------------------------------------------------------
DROP SCHEMA IF EXISTS `OPENHMIS2` ;
CREATE SCHEMA IF NOT EXISTS `OPENHMIS2` DEFAULT CHARACTER SET utf8 ;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.AGENCY
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`AGENCY` (
  `AGENCY_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `AGENCY_NAME` VARCHAR(300) NULL DEFAULT NULL,
  `DIRECT_SERVICE_GCT` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `AGENCY_DISPLAY_NAME` VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (`AGENCY_KEY`),
  INDEX `AGENCY_DSG` (`DIRECT_SERVICE_GCT` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 14264
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.AGENCY_PROJ_GROUP
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`AGENCY_PROJ_GROUP` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `GROUP_KEY` BIGINT(20) NOT NULL,
  `AGENCY_KEY` BIGINT(20) NOT NULL,
  `PROJECT_KEY` BIGINT(20) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  INDEX `APG_GPKEY_FK` (`GROUP_KEY` ASC),
  INDEX `APG_AK_FK` (`AGENCY_KEY` ASC),
  INDEX `APG_PKEY_FK` (`PROJECT_KEY` ASC),
  CONSTRAINT `APG_AK_FK`
    FOREIGN KEY (`AGENCY_KEY`)
    REFERENCES `OPENHMIS2`.`AGENCY` (`AGENCY_KEY`),
  CONSTRAINT `APG_GPKEY_FK`
    FOREIGN KEY (`GROUP_KEY`)
    REFERENCES `OPENHMIS2`.`GROUP_INFO` (`GROUP_KEY`),
  CONSTRAINT `APG_PKEY_FK`
    FOREIGN KEY (`PROJECT_KEY`)
    REFERENCES `OPENHMIS2`.`PROJECT` (`PROJECT_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 100000000921
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.AGENCY_SITE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`AGENCY_SITE` (
  `SITE_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `AGENCY_KEY` BIGINT(20) NOT NULL,
  `AGENCY_PRIMARY_SITE_GCT` INT(11) NULL DEFAULT NULL,
  `NAME` VARCHAR(200) NULL DEFAULT NULL,
  `ADDRESS` VARCHAR(200) NULL DEFAULT NULL,
  `CITY` VARCHAR(200) NULL DEFAULT NULL,
  `STATE` CHAR(2) NULL DEFAULT NULL,
  `ZIPCODE` CHAR(5) NULL DEFAULT NULL,
  `GEOCODE` BIGINT(20) NULL DEFAULT NULL,
  `CONFIG_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `SITE_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `HOUSING_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`SITE_KEY`),
  INDEX `AS_AK_FK` (`AGENCY_KEY` ASC),
  CONSTRAINT `AS_AK_FK`
    FOREIGN KEY (`AGENCY_KEY`)
    REFERENCES `OPENHMIS2`.`AGENCY` (`AGENCY_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 2082
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.BED_UNIT
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`BED_UNIT` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `PROJECT_KEY` BIGINT(20) NOT NULL,
  `HOUSEHOLD_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `BED_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `AVAILABILITY_CODE` INT(11) NULL DEFAULT NULL,
  `BED_INVENTORY` INT(11) NULL DEFAULT NULL,
  `CH_BED_INVENTORY` INT(11) NULL DEFAULT NULL,
  `UNIT_INVENTORY` INT(11) NULL DEFAULT NULL,
  `INVENTORY_START_DATE` DATE NULL DEFAULT NULL,
  `INVENTORY_END_DATE` DATE NULL DEFAULT NULL,
  `HMIS_PARTICIPATING_BEDS` INT(11) NULL DEFAULT NULL,
  `HMIS_START_DATE` DATE NULL DEFAULT NULL,
  `HMIS_END_DATE` DATE NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  INDEX `BED_UNIT_PK_FK` (`PROJECT_KEY` ASC),
  CONSTRAINT `BED_UNIT_PK_FK`
    FOREIGN KEY (`PROJECT_KEY`)
    REFERENCES `OPENHMIS2`.`PROJECT` (`PROJECT_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT` (
  `CLIENT_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `NAME_MIDDLE` VARCHAR(200) NULL DEFAULT NULL,
  `NAME_LAST` VARCHAR(200) NULL DEFAULT NULL,
  `NAME_FIRST` VARCHAR(200) NULL DEFAULT NULL,
  `NAME_SUFFIX` VARCHAR(200) NULL DEFAULT NULL,
  `SOC_SEC_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `SOC_SEC_NUMBER` VARCHAR(40) NULL DEFAULT NULL,
  `DOB_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `DATE_OF_BIRTH` DATE NULL DEFAULT NULL,
  `ETHNICITY_CODE` INT(11) NULL DEFAULT NULL,
  `GENDER_CODE` INT(11) NULL DEFAULT NULL,
  `VETERAN_STATUS_GCT` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `ACT_DATE_TIME` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`CLIENT_KEY`),
  INDEX `CLIENT_H_NAME_MIDDLE_IDX_` (`NAME_MIDDLE` ASC),
  INDEX `CLIENT_H_NAME_LAST_IDX` (`NAME_LAST` ASC),
  INDEX `CLIENT_H_ETHNICITY_IDX` (`ETHNICITY_CODE` ASC),
  INDEX `CLIENT_H_SOC_SEC_NUM_IDX` (`SOC_SEC_NUMBER` ASC),
  INDEX `CLIENT_H_GENDER_IDX` (`GENDER_CODE` ASC),
  INDEX `CLIENT_H_VETERAN_IDX` (`VETERAN_STATUS_GCT` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 1419001
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_CASH_INCOME
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_CASH_INCOME` (
  `CASH_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `CLIENT_KEY` BIGINT(20) NOT NULL,
  `INFORMATION_DATE` DATE NULL DEFAULT NULL,
  `ANY_SOURCE_GCT` INT(11) NULL DEFAULT NULL,
  `TOTAL_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `EARNEDINCOME_GCT` INT(11) NULL DEFAULT NULL,
  `EARNEDINCOME_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `EARNEDINCOME_START_DATE` DATE NULL DEFAULT NULL,
  `UNEMPINS_GCT` INT(11) NULL DEFAULT NULL,
  `UNEMPINS_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `UNEMPINS_START_DATE` DATE NULL DEFAULT NULL,
  `SSI_GCT` INT(11) NULL DEFAULT NULL,
  `SSI_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `SSI_START_DATE` DATE NULL DEFAULT NULL,
  `SSDI_GCT` INT(11) NULL DEFAULT NULL,
  `SSDI_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `SSDI_START_DATE` DATE NULL DEFAULT NULL,
  `VETDISPMT_GCT` INT(11) NULL DEFAULT NULL,
  `VETDISPMT_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `VETDISPMT_START_DATE` DATE NULL DEFAULT NULL,
  `PRIVDISINS_GCT` INT(11) NULL DEFAULT NULL,
  `PRIVDISINS_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `PRIVDISINS_START_DATE` DATE NULL DEFAULT NULL,
  `WORKERSCOMP_GCT` INT(11) NULL DEFAULT NULL,
  `WORKERSCOMP_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `WORKERSCOMP_START_DATE` DATE NULL DEFAULT NULL,
  `TANF_GCT` INT(11) NULL DEFAULT NULL,
  `TANF_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `TANF_START_DATE` DATE NULL DEFAULT NULL,
  `GENLASSIST_GCT` INT(11) NULL DEFAULT NULL,
  `GENLASSIST_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `GENLASSIST_START_DATE` DATE NULL DEFAULT NULL,
  `SOCSEC_GCT` INT(11) NULL DEFAULT NULL,
  `SOCSEC_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `SOCSEC_START_DATE` DATE NULL DEFAULT NULL,
  `VETPENSION_GCT` INT(11) NULL DEFAULT NULL,
  `VETPENSION_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `VETPENSION_START_DATE` DATE NULL DEFAULT NULL,
  `JOBPENSION_GCT` INT(11) NULL DEFAULT NULL,
  `JOBPENSION_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `JOBPENSION_START_DATE` DATE NULL DEFAULT NULL,
  `CHILDSUPPORT_GCT` INT(11) NULL DEFAULT NULL,
  `CHILDSUPPORT_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `CHILDSUPPORT_START_DATE` DATE NULL DEFAULT NULL,
  `ALIMONY_GCT` INT(11) NULL DEFAULT NULL,
  `ALIMONY_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `ALIMONY_START_DATE` DATE NULL DEFAULT NULL,
  `OTHERSOURCE_GCT` INT(11) NULL DEFAULT NULL,
  `OTHERSOURCE_MTHLY_AMT` DECIMAL(15,2) NULL DEFAULT NULL,
  `OTHERSOURCE_DATE` DATE NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CASH_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 1099675
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_DISABILITIES
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_DISABILITIES` (
  `DISABILITIES_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `CLIENT_KEY` BIGINT(20) NOT NULL,
  `INFORMATION_DATE` DATE NULL DEFAULT NULL,
  `PHYSICAL_GCT` INT(11) NULL DEFAULT NULL,
  `PHYSICAL_RECV_TREAT_GCT` INT(11) NULL DEFAULT NULL,
  `DEVELOPMENTAL_GCT` INT(11) NULL DEFAULT NULL,
  `DEVELOPMENTAL_RECV_TREAT_GCT` INT(11) NULL DEFAULT NULL,
  `CHRONIC_HEALTH_COND_GCT` INT(11) NULL DEFAULT NULL,
  `CHRONIC_RECV_TREAT_GCT` INT(11) NULL DEFAULT NULL,
  `HIVAIDS_GCT` INT(11) NULL DEFAULT NULL,
  `HIVAIDS_RECV_TREAT_GCT` INT(11) NULL DEFAULT NULL,
  `MENTAL_HEALTH_GCT` INT(11) NULL DEFAULT NULL,
  `MENTAL_HEALTH_LONG_GCT` INT(11) NULL DEFAULT NULL,
  `MENTAL_HLTH_RECV_TREAT_GCT` INT(11) NULL DEFAULT NULL,
  `SUBSTANCE_ABUSE_CODE` INT(11) NULL DEFAULT NULL,
  `SUBSTANCE_ABUSE_LONG_GCT` INT(11) NULL DEFAULT NULL,
  `SUBST_ABUSE_RECV_TREAT_GCT` INT(11) NULL DEFAULT NULL,
  `DOMES_VIOLENCE_GCT` INT(11) NULL DEFAULT NULL,
  `DOMES_VIOL_WHEN_CODE` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `DOCUMENT_ON_FILE` VARCHAR(20) NULL DEFAULT NULL,
  `HOW_CONFIRMED` INT(11) NULL DEFAULT NULL,
  `SMI_HOW_CONFIRM` INT(11) NULL DEFAULT NULL,
  `ACT_DATE_TIME` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`DISABILITIES_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 348893
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_HEALTH_INSURANCE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_HEALTH_INSURANCE` (
  `GROUP_KEY` BIGINT(20) NOT NULL,
  `CLIENT_KEY` BIGINT(20) NULL DEFAULT NULL,
  `COLLECT_STAGE` INT(11) NULL DEFAULT NULL,
  `PROGRAM_KEY` BIGINT(20) NULL DEFAULT NULL,
  `INFO_DATE` TIMESTAMP NULL DEFAULT NULL,
  `COVERED` INT(11) NULL DEFAULT NULL,
  `MEDECAID` INT(11) NULL DEFAULT NULL,
  `MEDECAID_DATE` TIMESTAMP NULL DEFAULT NULL,
  `MEDICARE` INT(11) NULL DEFAULT NULL,
  `MEDICARE_DATE` TIMESTAMP NULL DEFAULT NULL,
  `STATE_CHIP` INT(11) NULL DEFAULT NULL,
  `STATE_CHIP_DATE` TIMESTAMP NULL DEFAULT NULL,
  `VA_MED_SERVICES` INT(11) NULL DEFAULT NULL,
  `VA_MED_SERVICES_DATE` TIMESTAMP NULL DEFAULT NULL,
  `EMPLOYER` INT(11) NULL DEFAULT NULL,
  `EMPLOYER_DATE` TIMESTAMP NULL DEFAULT NULL,
  `COBRA` INT(11) NULL DEFAULT NULL,
  `COBRA_DATE` TIMESTAMP NULL DEFAULT NULL,
  `PRIVATE` INT(11) NULL DEFAULT NULL,
  `PRIVATE_DATE` TIMESTAMP NULL DEFAULT NULL,
  `STATE_ADULTS` INT(11) NULL DEFAULT NULL,
  `STATE_ADULTS_DATE` TIMESTAMP NULL DEFAULT NULL,
  `REASON_CODE` INT(11) NULL DEFAULT NULL,
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `NONCASH_GROUP_KEY` BIGINT(20) NULL DEFAULT NULL,
  `VERIFIED_DATE` DATE NULL DEFAULT NULL,
  `VERIFIED_ANSWER` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`GROUP_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_HOUSEHOLD
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_HOUSEHOLD` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `HOUSEHOLD_KEY` BIGINT(20) NOT NULL,
  `CLIENT_KEY` BIGINT(20) NOT NULL,
  `ACTIVE_IN_HOUSEHOLD_GCT` INT(11) NULL DEFAULT NULL,
  `RELATIONSHIP_CODE` INT(11) NULL DEFAULT NULL,
  `DATE_ENTERED` TIMESTAMP NULL DEFAULT NULL,
  `DATE_LEFT` TIMESTAMP NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  INDEX `CH_HK_IDX` (`HOUSEHOLD_KEY` ASC),
  INDEX `CH_CK_IDX` (`CLIENT_KEY` ASC),
  INDEX `CH_ACTIVE_HH_IDX` (`ACTIVE_IN_HOUSEHOLD_GCT` ASC),
  INDEX `CH_RC_IDX` (`RELATIONSHIP_CODE` ASC),
  INDEX `CH_DATE_ENTERED_IDX` (`DATE_ENTERED` ASC),
  INDEX `CH_DATE_LEFT_IDX` (`DATE_LEFT` ASC),
  INDEX `CH_REC_ACTIVE_IDX` (`REC_ACTIVE_GCT` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 1683418
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_NONCASH_BENEFITS
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_NONCASH_BENEFITS` (
  `NONCASH_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `CLIENT_KEY` BIGINT(20) NOT NULL,
  `INFORMATION_DATE` DATE NULL DEFAULT NULL,
  `ANY_SOURCE_GCT` INT(11) NULL DEFAULT NULL,
  `SNAP_GCT` INT(11) NULL DEFAULT NULL,
  `WIC_GCT` INT(11) NULL DEFAULT NULL,
  `TANF_CC_GCT` INT(11) NULL DEFAULT NULL,
  `TANF_TRAN_GCT` INT(11) NULL DEFAULT NULL,
  `TANF_OTHER_GCT` INT(11) NULL DEFAULT NULL,
  `ONGOING_RENT_ASSIST_GCT` INT(11) NULL DEFAULT NULL,
  `RENT_TEMP_GCT` INT(11) NULL DEFAULT NULL,
  `MEDICAID_GCT` INT(11) NULL DEFAULT NULL,
  `MEDICARE_GCT` INT(11) NULL DEFAULT NULL,
  `OTHER_SOURCE_GCT` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`NONCASH_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 819148
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_ORIGINAL
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_ORIGINAL` (
  `CLIENT_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `NAME_MIDDLE` VARCHAR(200) NULL DEFAULT NULL,
  `NAME_LAST` VARCHAR(200) NULL DEFAULT NULL,
  `NAME_FIRST` VARCHAR(200) NULL DEFAULT NULL,
  `NAME_SUFFIX` VARCHAR(200) NULL DEFAULT NULL,
  `SOC_SEC_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `SOC_SEC_NUMBER` VARCHAR(40) NULL DEFAULT NULL,
  `DOB_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `DATE_OF_BIRTH` DATE NULL DEFAULT NULL,
  `ETHNICITY_CODE` INT(11) NULL DEFAULT NULL,
  `GENDER_CODE` INT(11) NULL DEFAULT NULL,
  `VETERAN_STATUS_GCT` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CLIENT_KEY`),
  INDEX `CLIENT_NAME_MIDDLE_IDX` (`NAME_MIDDLE` ASC),
  INDEX `CLIENT_NAME_LAST_IDX` (`NAME_LAST` ASC),
  INDEX `CLIENT_ETHNICITY_IDX` (`ETHNICITY_CODE` ASC),
  INDEX `CLIENT_SOC_SEC_NUM_IDX` (`SOC_SEC_NUMBER` ASC),
  INDEX `CLIENT_GENDER_IDX` (`GENDER_CODE` ASC),
  INDEX `CLIENT_VETERAN_IDX` (`VETERAN_STATUS_GCT` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 1419000
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_PROGRAM_TEMP_AHAR1
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_PROGRAM_TEMP_AHAR1` (
  `PROGRAM_KEY` DOUBLE NULL DEFAULT NULL,
  `CLIENT_KEY` DOUBLE NULL DEFAULT NULL,
  `AGE` DOUBLE NULL DEFAULT NULL,
  `GENDER_KEY` DOUBLE NULL DEFAULT NULL,
  `RACE_KEY` DOUBLE NULL DEFAULT NULL,
  `ETHNICITY_KEY` DOUBLE NULL DEFAULT NULL,
  `VETERAN` DOUBLE NULL DEFAULT NULL,
  `DISABLING_CONDITION` DOUBLE NULL DEFAULT NULL,
  `PROGRAM_NAME_KEY` DOUBLE NULL DEFAULT NULL,
  `PROGRAM_TYPE_KEY` DOUBLE NULL DEFAULT NULL,
  `AGENCY_KEY` DOUBLE NULL DEFAULT NULL,
  `ENTRY_DATE_1` DATETIME NULL DEFAULT NULL,
  `EXIT_DATE_1` DATETIME NULL DEFAULT NULL,
  `SERVED_FLAG` VARCHAR(2) NULL DEFAULT NULL,
  `ENTRY_DATE` DATETIME NULL DEFAULT NULL,
  `EXIT_DATE` DATETIME NULL DEFAULT NULL,
  `HOUSEHOLD_KEY` DOUBLE NULL DEFAULT NULL,
  `NO_HOUSEHOLD` VARCHAR(2) NULL DEFAULT NULL,
  `HOUSEHOLD_SIZE` DOUBLE NULL DEFAULT NULL,
  `FAMILY_FLAG` VARCHAR(2) NULL DEFAULT NULL,
  `NUM_OF_ADULT` DOUBLE NULL DEFAULT NULL,
  `NUM_OF_CHILD` DOUBLE NULL DEFAULT NULL,
  `NUM_OF_UNKNOWN` DOUBLE NULL DEFAULT NULL,
  `PRIOR_NIGHTS_RESIDENCE_KEY` DOUBLE NULL DEFAULT NULL,
  `ZIPCODE_LAST_PERM_ADDRESS` VARCHAR(50) NULL DEFAULT NULL,
  `LENGTH_OF_STAY_KEY` DOUBLE NULL DEFAULT NULL,
  `ZIP_QUALITY_CODE` DOUBLE NULL DEFAULT NULL,
  `RECORD_ID` DOUBLE NULL DEFAULT NULL,
  `GROUP_KEY` DOUBLE NULL DEFAULT NULL,
  `DATE_ENTERED` DATETIME NULL DEFAULT NULL,
  `DATE_LEFT` DATETIME NULL DEFAULT NULL,
  `FIRST_ENTRY` VARCHAR(2) NULL DEFAULT NULL,
  `DATE_OF_BIRTH` DATETIME NULL DEFAULT NULL,
  `HOUSING_STATUS_ENTRY_DATE` DATETIME NULL DEFAULT NULL,
  `DESTINATION_KEY` DOUBLE NULL DEFAULT NULL,
  `LAST_ENTRY` VARCHAR(2) NULL DEFAULT NULL,
  `LAST_EXIT` VARCHAR(2) NULL DEFAULT NULL,
  `NEW_CLIENT_STATUS` VARCHAR(2) NULL DEFAULT NULL,
  INDEX `AHAR_TEMP_CK_IDX` (`CLIENT_KEY` ASC),
  INDEX `AHAR_TEMP_GPPT_IDX` (`PROGRAM_TYPE_KEY` ASC, `GROUP_KEY` ASC),
  INDEX `AHAR_TEMP_VETERAN_IDX` (`VETERAN` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_PROGRAM_TEMP_AHAR_2
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_PROGRAM_TEMP_AHAR_2` (
  `PROGRAM_KEY` DOUBLE NULL DEFAULT NULL,
  `CLIENT_KEY` DOUBLE NULL DEFAULT NULL,
  `AGE` DOUBLE NULL DEFAULT NULL,
  `GENDER_KEY` DOUBLE NULL DEFAULT NULL,
  `RACE_KEY` DOUBLE NULL DEFAULT NULL,
  `ETHNICITY_KEY` DOUBLE NULL DEFAULT NULL,
  `VETERAN` DOUBLE NULL DEFAULT NULL,
  `DISABLING_CONDITION` DOUBLE NULL DEFAULT NULL,
  `PROGRAM_NAME_KEY` DOUBLE NULL DEFAULT NULL,
  `PROGRAM_TYPE_KEY` DOUBLE NULL DEFAULT NULL,
  `AGENCY_KEY` DOUBLE NULL DEFAULT NULL,
  `ENTRY_DATE_1` DATETIME NULL DEFAULT NULL,
  `EXIT_DATE_1` DATETIME NULL DEFAULT NULL,
  `SERVED_FLAG` VARCHAR(2) NULL DEFAULT NULL,
  `ENTRY_DATE` DATETIME NULL DEFAULT NULL,
  `EXIT_DATE` DATETIME NULL DEFAULT NULL,
  `HOUSEHOLD_KEY` DOUBLE NULL DEFAULT NULL,
  `NO_HOUSEHOLD` VARCHAR(2) NULL DEFAULT NULL,
  `HOUSEHOLD_SIZE` DOUBLE NULL DEFAULT NULL,
  `FAMILY_FLAG` VARCHAR(2) NULL DEFAULT NULL,
  `NUM_OF_ADULT` DOUBLE NULL DEFAULT NULL,
  `NUM_OF_CHILD` DOUBLE NULL DEFAULT NULL,
  `NUM_OF_UNKNOWN` DOUBLE NULL DEFAULT NULL,
  `PRIOR_NIGHTS_RESIDENCE_KEY` DOUBLE NULL DEFAULT NULL,
  `ZIPCODE_LAST_PERM_ADDRESS` VARCHAR(50) NULL DEFAULT NULL,
  `LENGTH_OF_STAY_KEY` DOUBLE NULL DEFAULT NULL,
  `ZIP_QUALITY_CODE` DOUBLE NULL DEFAULT NULL,
  `RECORD_ID` DOUBLE NULL DEFAULT NULL,
  `GROUP_KEY` DOUBLE NULL DEFAULT NULL,
  `DATE_ENTERED` DATETIME NULL DEFAULT NULL,
  `DATE_LEFT` DATETIME NULL DEFAULT NULL,
  `FIRST_ENTRY` VARCHAR(2) NULL DEFAULT NULL,
  `DATE_OF_BIRTH` DATETIME NULL DEFAULT NULL,
  `HOUSING_STATUS_ENTRY_DATE` DATETIME NULL DEFAULT NULL,
  `DESTINATION_KEY` DOUBLE NULL DEFAULT NULL,
  `LAST_ENTRY` VARCHAR(2) NULL DEFAULT NULL,
  `LAST_EXIT` VARCHAR(2) NULL DEFAULT NULL,
  `NEW_CLIENT_STATUS` VARCHAR(2) NULL DEFAULT NULL,
  `ROW_ID` INT(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ROW_ID`),
  INDEX `AHAR_2_CK_IDX` (`CLIENT_KEY` ASC),
  INDEX `AHAR_2_TEMP_GPKEY_PTKEY_IDX` (`GROUP_KEY` ASC, `PROGRAM_TYPE_KEY` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_RACE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_RACE` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `CLIENT_KEY` BIGINT(20) NOT NULL,
  `RACE_CODE` INT(11) NOT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT NULL,
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  INDEX `CR_CK_IDX` (`CLIENT_KEY` ASC),
  INDEX `CR_RACE_CODE_IDX` (`RACE_CODE` ASC),
  INDEX `CR_REC_ACTIVE_GCT_IDX` (`REC_ACTIVE_GCT` ASC),
  CONSTRAINT `FK_CLIENT_RACE`
    FOREIGN KEY (`RACE_CODE`)
    REFERENCES `OPENHMIS2`.`CODE_RACE` (`CODE_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 972281
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_STATUS
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_STATUS` (
  `STATUS_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `CLIENT_KEY` BIGINT(20) NOT NULL,
  `INFORMATION_DATE` DATE NULL DEFAULT NULL,
  `HOUSEHOLD_KEY` BIGINT(20) NULL DEFAULT NULL,
  `HEAD_OF_HOUSEHOLD_GCT` INT(11) NULL DEFAULT NULL,
  `DISABLING_CONDITION_GCT` INT(11) NULL DEFAULT NULL,
  `PRIOR_RESIDENCE_CODE` INT(11) NULL DEFAULT NULL,
  `LENGTH_OF_STAY_CODE` INT(11) NULL DEFAULT NULL,
  `PRIOR_RES_FUND_SRC_CODE` INT(11) NULL DEFAULT NULL,
  `ZIPCODE_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `LAST_PERM_ZIPCODE` CHAR(5) NULL DEFAULT NULL,
  `HOUSING_STATUS_CODE` INT(11) NULL DEFAULT NULL,
  `GENERAL_HEALTH_CODE` INT(11) NULL DEFAULT NULL,
  `PREGNANCY_GCT` INT(11) NULL DEFAULT NULL,
  `DUE_DATE` DATE NULL DEFAULT NULL,
  `LAST_GRADE_COMPLETED_CODE` INT(11) NULL DEFAULT NULL,
  `SCHOOL_STATUS_CODE` INT(11) NULL DEFAULT NULL,
  `EMPLOYMENT_STATUS_CODE` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `CONTINUOUSLY_HL_ONEYEAR` VARCHAR(20) NULL DEFAULT NULL,
  `TIMES_HL_PAST_THREEYEARS` DECIMAL(10,0) NULL DEFAULT NULL,
  `MONTHS_HL_PAST_THREEYEARS` DECIMAL(10,0) NULL DEFAULT NULL,
  `YEARS_HL_CONTINUOUSLY` VARCHAR(20) NULL DEFAULT NULL,
  `STATUS_DOCUMENTED` INT(11) NULL DEFAULT NULL,
  `MOVE_IN_PERM_HOUSING` VARCHAR(20) NULL DEFAULT NULL,
  `PERM_MOVE_IN_DATE` DATE NULL DEFAULT NULL,
  `PROGRAM_RELATIONSHIP_KEY` INT(11) NULL DEFAULT NULL,
  `MONTHSHOMElESSTHISTIME` DECIMAL(10,0) NULL DEFAULT NULL,
  PRIMARY KEY (`STATUS_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 337856
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_THEATRE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_THEATRE` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `VETERAN_INFO_KEY` BIGINT(20) NOT NULL,
  `THEATRE_CODE` INT(11) NOT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CLIENT_VETERAN_INFO
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CLIENT_VETERAN_INFO` (
  `VETERAN_INFO_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `CLIENT_KEY` BIGINT(20) NULL DEFAULT NULL,
  `PREVIOUS_VET_INFO_KEY` BIGINT(20) NULL DEFAULT NULL,
  `INFORMATION_DATE` DATE NULL DEFAULT NULL,
  `YEAR_ENTERED_MILITARY` INT(11) NULL DEFAULT NULL,
  `YEAR_LEFT_MILITARY` INT(11) NULL DEFAULT NULL,
  `SERVED_IN_THEATRE_GCT` INT(11) NULL DEFAULT NULL,
  `MILITARY_BRANCH_CODE` INT(11) NULL DEFAULT NULL,
  `MILITARY_DISCHARGE_CODE` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `WorldWarII` VARCHAR(20) NULL DEFAULT NULL,
  `KoreanWar` VARCHAR(20) NULL DEFAULT NULL,
  `VietnamWar` VARCHAR(20) NULL DEFAULT NULL,
  `DesertStorm` VARCHAR(20) NULL DEFAULT NULL,
  `AfghanistanOEF` VARCHAR(20) NULL DEFAULT NULL,
  `IraqOIF` VARCHAR(20) NULL DEFAULT NULL,
  `IraqOND` VARCHAR(20) NULL DEFAULT NULL,
  `OtherTheatre` VARCHAR(20) NULL DEFAULT NULL,
  `ACT_DATE_TIME` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`VETERAN_INFO_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_COLLECT_STAGE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_COLLECT_STAGE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` LONGTEXT NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_DISABILITY
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_DISABILITY` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE` INT(11) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_DOB_TYPE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_DOB_TYPE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` LONGTEXT NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_ETHNICITY
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_ETHNICITY` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` LONGTEXT NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_GENDER
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_GENDER` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` LONGTEXT NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_GENERAL
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_GENERAL` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE` INT(11) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_HEALTH_INSURANCE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_HEALTH_INSURANCE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE` INT(11) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_HEALTH_INS_REASON
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_HEALTH_INS_REASON` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE` INT(11) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_HEALTH_STATUS
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_HEALTH_STATUS` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE` INT(11) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_HOUSING_STATUS
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_HOUSING_STATUS` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(300) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(300) NULL DEFAULT NULL,
  `NOTES` VARCHAR(600) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `OTHER_DESCRIPTIVE_FIELDS_AS_NEEDED` VARCHAR(600) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_ID_TYPE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_ID_TYPE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` LONGTEXT NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_INCOME
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_INCOME` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE` INT(11) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_MILITARY_THEATRE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_MILITARY_THEATRE` (
  `CODE_KEY` BIGINT(20) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_NON_CASH_BENEFIT
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_NON_CASH_BENEFIT` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE` INT(11) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_PROJECT_TYPE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_PROJECT_TYPE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` LONGTEXT NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `RESIDENTIAL` CHAR(1) CHARACTER SET 'latin1' NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_RACE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_RACE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` LONGTEXT NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_RESIDENCE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_RESIDENCE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(300) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(300) NULL DEFAULT NULL,
  `NOTES` VARCHAR(600) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `OTHER_DESCRIPTIVE_FIELDS_AS_NEEDED` VARCHAR(600) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_STATE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_STATE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE` INT(11) NULL DEFAULT NULL,
  `NOTES` VARCHAR(400) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_TABLE_TEMPLATE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_TABLE_TEMPLATE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(300) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(300) NULL DEFAULT NULL,
  `NOTES` VARCHAR(600) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `OTHER_DESCRIPTIVE_FIELDS_AS_NEEDED` VARCHAR(600) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_TAXONOMY
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_TAXONOMY` (
  `CODE_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `PARENT_KEY` BIGINT(20) NULL DEFAULT NULL,
  `TAXONOMY_ID` VARCHAR(200) NULL DEFAULT NULL,
  `TAXONOMY_DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `KEYWORDS` VARCHAR(100) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.CODE_THEATRE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`CODE_THEATRE` (
  `CODE_KEY` INT(11) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `SHORT_DESC` VARCHAR(200) NULL DEFAULT NULL,
  `NOTES` LONGTEXT NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`CODE_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.DateOfEngagement
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`DateOfEngagement` (
  `DateOfEngagementID` BIGINT(20) NULL DEFAULT NULL,
  `ProjectEntryID` BIGINT(20) NULL DEFAULT NULL,
  `DateOfEngagement` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `DateCreated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `DateDeleted` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `DateUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `UserID` INT(11) NULL DEFAULT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.FEDERAL_FUNDING_SOURCE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`FEDERAL_FUNDING_SOURCE` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `PROJECT_KEY` BIGINT(20) NOT NULL,
  `FED_FUND_SRC_CODE` INT(11) NULL DEFAULT NULL,
  `OTHER_DESCRIPTION` VARCHAR(100) NULL DEFAULT NULL,
  `GRANT_ID` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.GROUP_INFO
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`GROUP_INFO` (
  `GROUP_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(200) NULL DEFAULT NULL,
  `TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `DESCRIPTION` VARCHAR(400) NULL DEFAULT NULL,
  `CITY` VARCHAR(40) NULL DEFAULT NULL,
  `COUNTY` VARCHAR(40) NULL DEFAULT NULL,
  `STATE_CODE` INT(11) NULL DEFAULT NULL,
  `HUD_COC_ID` VARCHAR(40) NULL DEFAULT NULL,
  `HUD_COC_NAME` VARCHAR(120) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`GROUP_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 333
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.PATHStatus
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`PATHStatus` (
  `PATHStatusID` BIGINT(20) NULL DEFAULT NULL,
  `ProjectEntryID` BIGINT(20) NULL DEFAULT NULL,
  `CientEnrolledinPATH` INT(11) NULL DEFAULT NULL,
  `ReasonNotEnrolled` INT(11) NULL DEFAULT NULL,
  `DateCreated` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `DateDeleted` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `DateUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `UserID` INT(11) NULL DEFAULT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.PERMISSION
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`PERMISSION` (
  `PERMISSION_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(200) NULL DEFAULT NULL,
  `CATEGORY_CODE` INT(11) NULL DEFAULT NULL,
  `ROLE_CODE` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`PERMISSION_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.PROJECT
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`PROJECT` (
  `PROJECT_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `PROJECT_NAME` VARCHAR(600) NULL DEFAULT NULL,
  `AGENCY_KEY` BIGINT(20) NULL DEFAULT NULL,
  `COC_GROUP_KEY` INT(11) NULL DEFAULT NULL,
  `PRIMARY_SITE_KEY` BIGINT(20) NULL DEFAULT NULL,
  `MAX_STAY_DAYS` INT(11) NULL DEFAULT NULL,
  `PROJECT_TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `TARGET_POP_A_CODE` INT(11) NULL DEFAULT NULL,
  `TARGET_POP_B_CODE` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `ACT_DATE_TIME` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `CONTINUUMPROJECT` VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (`PROJECT_KEY`),
  INDEX `PROJECT_AK_IDX` (`AGENCY_KEY` ASC),
  INDEX `PROJECT_TYPE_CODE_IDX` (`PROJECT_TYPE_CODE` ASC),
  INDEX `PROJECT_REC_ACTIVE_IDX` (`REC_ACTIVE_GCT` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 7487
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.PROJECT_PARTICIPATION
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`PROJECT_PARTICIPATION` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `CLIENT_KEY` BIGINT(20) NOT NULL,
  `PROJECT_KEY` BIGINT(20) NOT NULL,
  `ENTRY_DATE` DATE NULL DEFAULT NULL,
  `EXIT_DATE` DATE NULL DEFAULT NULL,
  `REASON_LEAVING_CODE` INT(11) NULL DEFAULT NULL,
  `DESTINATION_CODE` INT(11) NULL DEFAULT NULL,
  `DEST_FUND_SRC_CODE` INT(11) NULL DEFAULT NULL,
  `TRANSITION_CODE` INT(11) NULL DEFAULT NULL,
  `VETERAN_INFO_KEY` BIGINT(20) NOT NULL,
  `S1_CASH_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S2_CASH_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S3_CASH_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S4_CASH_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S1_BENEFITS_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S2_BENEFITS_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S3_BENEFITS_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S4_BENEFITS_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S1_DISABILITIES_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S2_DISABILITIES_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S3_DISABILITIES_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S4_DISABILITIES_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S1_STATUS_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S2_STATUS_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S3_STATUS_KEY` BIGINT(20) NULL DEFAULT NULL,
  `S4_STATUS_KEY` BIGINT(20) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  INDEX `PP_PK_IDX` (`PROJECT_KEY` ASC),
  INDEX `PP_CK_IDX` (`CLIENT_KEY` ASC),
  INDEX `PP_ENTRYDATE_IDX` (`ENTRY_DATE` ASC),
  INDEX `PP_EXITDATE_IDX` (`EXIT_DATE` ASC),
  INDEX `PP_DEST_IDX` (`DESTINATION_CODE` ASC),
  INDEX `PP_VETERAN_IDX` (`VETERAN_INFO_KEY` ASC),
  INDEX `PP_S1_CASH_IDX` (`S1_CASH_KEY` ASC),
  INDEX `PP_S3_CASH_IDX` (`S3_CASH_KEY` ASC),
  INDEX `PP_S1_DISABILITIES_IDX` (`S1_DISABILITIES_KEY` ASC),
  INDEX `PP_S1_BENEFITS_IDX` (`S1_BENEFITS_KEY` ASC),
  INDEX `PP_S1_STATUS_IDX` (`S1_STATUS_KEY` ASC),
  INDEX `PP_REC_ACTIVE_IDX` (`REC_ACTIVE_GCT` ASC),
  INDEX `PP_S3_STATUS_IDX` (`S3_STATUS_KEY` ASC),
  INDEX `PP_S3_BENEFITS_IDX` (`S3_BENEFITS_KEY` ASC),
  INDEX `PP_S3_DISABILITIES_IDX` (`S3_DISABILITIES_KEY` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 1074016
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.REPORT
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`REPORT` (
  `REPORT_KEY` INT(11) NOT NULL,
  `PARENT_KEY` INT(11) NULL DEFAULT NULL,
  `TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `NAME` VARCHAR(200) NULL DEFAULT NULL,
  `KEYWORDS` VARCHAR(200) NULL DEFAULT NULL,
  `FILE_NAME` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT NULL,
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`REPORT_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.REPORT_PARAMETER
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`REPORT_PARAMETER` (
  `PARM_KEY` INT(11) NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(200) NULL DEFAULT NULL,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  `TYPE_CODE` INT(11) NULL DEFAULT NULL,
  `LIST_NAME` VARCHAR(200) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`PARM_KEY`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.REPORT_TO_PARMS
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`REPORT_TO_PARMS` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `REPORT_KEY` INT(11) NULL DEFAULT NULL,
  `PARM_KEY` INT(11) NULL DEFAULT NULL,
  `ORDER_NUMBER` INT(11) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.SERVICE_EVENT
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`SERVICE_EVENT` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `CLIENT_KEY` BIGINT(20) NULL DEFAULT NULL,
  `TAXONOMY_CODE` BIGINT(20) NULL DEFAULT NULL,
  `SERVICE_DATE` DATE NULL DEFAULT NULL,
  `OUTCOME_CODE` INT(11) NULL DEFAULT NULL,
  `NOTE` VARCHAR(4000) NULL DEFAULT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 8846516
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.USER_INFO
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`USER_INFO` (
  `USER_KEY` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `AGENCY_KEY` BIGINT(20) NULL DEFAULT NULL,
  `USER_ID` VARCHAR(200) NULL DEFAULT NULL,
  `PASSWORD_ENC` VARCHAR(200) NULL DEFAULT NULL,
  `PW_EXPIRE_DATE` DATE NULL DEFAULT NULL,
  `NAME_FIRST` VARCHAR(200) NULL DEFAULT NULL,
  `NAME_LAST` VARCHAR(200) NULL DEFAULT NULL,
  `USER_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`USER_KEY`))
ENGINE = InnoDB
AUTO_INCREMENT = 44226
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Table OPENHMIS2.USER_PERMISSION
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPENHMIS2`.`USER_PERMISSION` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `USER_KEY` BIGINT(20) NOT NULL,
  `PERMISSION_KEY` INT(11) NOT NULL,
  `REC_ACTIVE_GCT` INT(11) NULL DEFAULT '1',
  `ENTRY_DATE_TIME` TIMESTAMP NULL DEFAULT NULL,
  `ENTRY_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  `LOG_DATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `LOG_USER_KEY` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.AGENCY_SYST_UTIL_AGENCY_LEVEL
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`%` PROCEDURE `AGENCY_SYST_UTIL_AGENCY_LEVEL`(V_AK INT, BD DATE, ED DATE)
BEGIN
DECLARE v_PROJECT_KEY integer;

DECLARE v_PROJECT_NAME varchar(100) DEFAULT "";

DECLARE v_PROJECT_TYPE_CODE integer;

DECLARE v_AGENCY_KEY integer;

DECLARE V_TOTAL_NIGHTS_DAYS integer;

DECLARE V_TOTAL_NIGHTS_DAYS_DIS integer;

DECLARE V_NUM_CLIENT integer;

DECLARE V_NUM_CLIENT_LAST_DATE integer;

DECLARE V_NUM_CLIENT_DIS integer;

DECLARE V_TOTAL_ENROLLMENT integer;

DECLARE V_TOTAL_DISCHARGE integer;

DECLARE V_Total_Of_Services_program integer;


DEClARE pro_list_cursor CURSOR FOR SELECT DISTINCT P.PROJECT_KEY, P.PROJECT_NAME, P.PROJECT_TYPE_CODE, P.AGENCY_KEY  FROM  OPENHMIS2.PROJECT P WHERE P.REC_ACTIVE_GCT = 1 AND P.AGENCY_KEY = V_AK ORDER BY P.PROJECT_KEY DESC;

DELETE FROM REPORT.PATH_COMMUNITY_TEMP_SYS_UTIL WHERE AGENCY_KEY = v_AK;

  
  OPEN pro_list_cursor;
  read_loop: LOOP 
    FETCH pro_list_cursor INTO v_PROJECT_KEY, v_PROJECT_NAME, v_PROJECT_TYPE_CODE, v_AGENCY_KEY;

IF v_PROJECT_TYPE_CODE in (1,2,3,8)  THEN

                       SELECT SUM(CASE WHEN B.EXIT_DATE >= ED + 1 THEN ED + 1 ELSE B.EXIT_DATE END - CASE WHEN B.ENTRY_DATE <= BD THEN BD ELSE B.ENTRY_DATE END) INTO V_TOTAL_NIGHTS_DAYS FROM OPENHMIS2.PROJECT_PARTICIPATION B WHERE B.PROJECT_KEY = v_PROJECT_KEY AND B.REC_ACTIVE_GCT = 1 AND B.EXIT_DATE >= B.ENTRY_DATE;      

                       SELECT SUM(CASE WHEN B.EXIT_DATE >= ED + 1 THEN ED + 1 ELSE B.EXIT_DATE END - CASE WHEN B.ENTRY_DATE <= BD THEN BD ELSE B.ENTRY_DATE END) INTO V_TOTAL_NIGHTS_DAYS_DIS FROM OPENHMIS2.PROJECT_PARTICIPATION B WHERE B.PROJECT_KEY = v_PROJECT_KEY AND B.REC_ACTIVE_GCT = 1 AND B.EXIT_DATE BETWEEN BD AND ED  AND B.EXIT_DATE >= B.ENTRY_DATE;      

                       SELECT COUNT(DISTINCT PCP.CLIENT_KEY) INTO V_NUM_CLIENT FROM OPENHMIS2.PROJECT_PARTICIPATION PCP WHERE PCP.ENTRY_DATE <=  ED AND (PCP.EXIT_DATE IS NULL OR PCP.EXIT_DATE > ED)  AND PCP.PROJECT_KEY = v_PROJECT_KEY AND PCP.REC_ACTIVE_GCT = 1 AND (PCP.ENTRY_DATE < PCP.EXIT_DATE OR PCP.EXIT_DATE IS NULL);
              
                       SELECT COUNT(DISTINCT A.CLIENT_KEY) INTO V_NUM_CLIENT_LAST_DATE FROM OPENHMIS2.PROJECT_PARTICIPATION A WHERE A.PROJECT_KEY = v_PROJECT_KEY AND A.REC_ACTIVE_GCT = 1  AND A.ENTRY_DATE <= ED AND (A.EXIT_DATE > ED OR A.EXIT_DATE IS NULL) AND (A.ENTRY_DATE < A.EXIT_DATE OR A.EXIT_DATE IS NULL);

                       SELECT COUNT(DISTINCT A.CLIENT_KEY) INTO V_NUM_CLIENT_DIS FROM OPENHMIS2.PROJECT_PARTICIPATION A WHERE A.PROJECT_KEY = v_PROJECT_KEY AND A.REC_ACTIVE_GCT = 1  AND A.EXIT_DATE BETWEEN BD AND ED AND (A.ENTRY_DATE < A.EXIT_DATE OR A.EXIT_DATE IS NULL);
                         
                       SELECT COUNT(DISTINCT A.ID ) INTO V_TOTAL_ENROLLMENT FROM OPENHMIS2.PROJECT_PARTICIPATION A WHERE A.PROJECT_KEY = v_PROJECT_KEY AND A.REC_ACTIVE_GCT = 1  AND A.ENTRY_DATE BETWEEN BD AND ED AND (A.ENTRY_DATE < A.EXIT_DATE OR A.EXIT_DATE IS NULL);

                       SELECT COUNT(DISTINCT A.ID) INTO V_TOTAL_DISCHARGE FROM OPENHMIS2.PROJECT_PARTICIPATION A WHERE A.PROJECT_KEY = v_PROJECT_KEY AND A.REC_ACTIVE_GCT = 1  AND A.EXIT_DATE BETWEEN BD AND ED AND (A.ENTRY_DATE < A.EXIT_DATE OR A.EXIT_DATE IS NULL);

                       SELECT COUNT(DISTINCT SE.ID) INTO V_Total_Of_Services_program FROM OPENHMIS2.SERVICE_EVENT SE, OPENHMIS2.USER_INFO PU WHERE SE.REC_ACTIVE_GCT = 1 AND PU.USER_ACTIVE_GCT = 1 AND PU.REC_ACTIVE_GCT = 1 AND SE.ENTRY_USER_KEY = PU.USER_KEY AND PU.AGENCY_KEY = v_AGENCY_KEY  AND SE.SERVICE_DATE BETWEEN BD AND ED + 0.9999 AND SE.TAXONOMY_CODE IS NOT NULL AND SE.CLIENT_KEY IN (SELECT PCP.CLIENT_KEY FROM OPENHMIS2.PROJECT_PARTICIPATION PCP WHERE PCP.REC_ACTIVE_GCT = 1 AND PCP.PROJECT_KEY = v_PROJECT_KEY AND PCP.ENTRY_DATE < ED + 0.9999 AND (PCP.EXIT_DATE >= BD OR PCP.EXIT_DATE IS NULL) AND (PCP.ENTRY_DATE < PCP.EXIT_DATE OR PCP.EXIT_DATE IS NULL));

ELSE

                       SELECT SUM(CASE WHEN B.EXIT_DATE >= ED THEN ED ELSE B.EXIT_DATE END - CASE WHEN B.ENTRY_DATE <= BD THEN BD ELSE B.ENTRY_DATE END + 1) INTO V_TOTAL_NIGHTS_DAYS FROM OPENHMIS2.PROJECT_PARTICIPATION B WHERE B.PROJECT_KEY = v_PROJECT_KEY AND B.REC_ACTIVE_GCT = 1 AND B.EXIT_DATE >= B.ENTRY_DATE;     

                       SELECT SUM(CASE WHEN B.EXIT_DATE >= ED THEN ED ELSE B.EXIT_DATE END - CASE WHEN B.ENTRY_DATE <= BD THEN BD ELSE B.ENTRY_DATE END + 1) INTO V_TOTAL_NIGHTS_DAYS_DIS FROM OPENHMIS2.PROJECT_PARTICIPATION B WHERE B.PROJECT_KEY = v_PROJECT_KEY AND B.REC_ACTIVE_GCT = 1 AND B.EXIT_DATE BETWEEN BD AND ED AND B.EXIT_DATE >= B.ENTRY_DATE;     
 
                       SELECT COUNT(DISTINCT PCP.CLIENT_KEY) INTO V_NUM_CLIENT FROM OPENHMIS2.PROJECT_PARTICIPATION PCP WHERE PCP.ENTRY_DATE <=  ED AND (PCP.EXIT_DATE IS NULL OR PCP.EXIT_DATE > ED)  AND PCP.PROJECT_KEY = v_PROJECT_KEY AND PCP.REC_ACTIVE_GCT = 1;
              
                       SELECT COUNT(DISTINCT A.CLIENT_KEY) INTO V_NUM_CLIENT_LAST_DATE FROM OPENHMIS2.PROJECT_PARTICIPATION A WHERE A.PROJECT_KEY = v_PROJECT_KEY AND A.REC_ACTIVE_GCT = 1 AND A.ENTRY_DATE <= ED AND (A.EXIT_DATE > ED OR A.EXIT_DATE IS NULL);

                       SELECT COUNT(DISTINCT A.CLIENT_KEY) INTO V_NUM_CLIENT_DIS FROM OPENHMIS2.PROJECT_PARTICIPATION A WHERE A.PROJECT_KEY = v_PROJECT_KEY AND A.REC_ACTIVE_GCT = 1 AND A.EXIT_DATE BETWEEN BD AND ED;
                         
                      SELECT COUNT(DISTINCT A.ID ) INTO V_TOTAL_ENROLLMENT FROM OPENHMIS2.PROJECT_PARTICIPATION A WHERE A.PROJECT_KEY = v_PROJECT_KEY AND A.REC_ACTIVE_GCT = 1 AND A.ENTRY_DATE BETWEEN BD AND ED;

                      SELECT COUNT(DISTINCT A.ID) INTO V_TOTAL_DISCHARGE FROM OPENHMIS2.PROJECT_PARTICIPATION A WHERE A.PROJECT_KEY = v_PROJECT_KEY AND A.REC_ACTIVE_GCT = 1 AND A.EXIT_DATE BETWEEN BD AND ED;

                      SELECT COUNT(DISTINCT SE.ID) INTO V_Total_Of_Services_program FROM OPENHMIS2.SERVICE_EVENT SE, OPENHMIS2.USER_INFO PU WHERE SE.REC_ACTIVE_GCT = 1 AND PU.USER_ACTIVE_GCT = 1 AND PU.REC_ACTIVE_GCT = 1 AND SE.ENTRY_USER_KEY = PU.USER_KEY AND PU.AGENCY_KEY = v_AGENCY_KEY  AND SE.SERVICE_DATE BETWEEN BD AND ED + 0.9999 AND SE.TAXONOMY_CODE IS NOT NULL AND SE.CLIENT_KEY IN (SELECT PCP.CLIENT_KEY FROM OPENHMIS2.PROJECT_PARTICIPATION PCP WHERE PCP.REC_ACTIVE_GCT = 1 AND PCP.PROJECT_KEY = v_PROJECT_KEY AND PCP.ENTRY_DATE < ED + 0.9999 AND (PCP.EXIT_DATE >= BD OR PCP.EXIT_DATE IS NULL) AND (PCP.ENTRY_DATE < PCP.EXIT_DATE OR PCP.EXIT_DATE IS NULL));

             
              INSERT INTO REPORT.PATH_COMMUNITY_TEMP_SYS_UTIL( GROUP_KEY, AGENCY_KEY, SITE_KEY, PROJECT_NAME, PROGRAM_NAME_KEY, PROJECT_TYPE,BED_CAPACITY, Enrolled, Average_Enrolled, Total_Enrollment, Total_Discharges, Avg_discharge, AVERAGE_UTILIZATION, TOTAL_OF_SERVICES_program)

             /* SELECT */ VALUES(      NULL,
                           v_AGENCY_KEY,
                           null     /*SITE_KEY */,
                           v_PROJECT_NAME, 
                           
                           v_PROJECT_KEY /*PROGRAM_NAME_KEY*/,

                           V_PROJECT_TYPE_CODE /*PROJECT_KEY*/,  
                           NULL /*BED_CAPACITY*/, 
              
                           V_NUM_CLIENT_LAST_DATE /*Enrolled*/,

                           NULL /*Average_Enrolled*/,

                           V_TOTAL_ENROLLMENT /*Total_Enrollment*/,

                           V_TOTAL_DISCHARGE  /*Total_Discharges*/,

                           NULL /*Avg_discharge*/,
            
                           NULL /*AVERAGE_UTILIZATION*/,
                           
                           V_Total_Of_Services_program /*Total_Of_Services_program */)
; 
COMMIT;


END IF;
 END LOOP; 
  CLOSE pro_list_cursor; 
  
SELECT * FROM REPORT.PATH_COMMUNITY_TEMP_SYS_UTIL;
  
END$$

DELIMITER ;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.CLIENT_HOUSEHOLD_SP
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `CLIENT_HOUSEHOLD_SP`()
BEGIN
INSERT INTO OPENHMIS.SP_LOG_TABLE(TABLE_NAME, START_TIME, END_TIME) VALUES('CLIENT_HOUSEHOLD',NOW(), 0);

INSERT INTO OPENHMIS2.CLIENT_HOUSEHOLD(ID,HOUSEHOLD_KEY,CLIENT_KEY,ACTIVE_IN_HOUSEHOLD_GCT,RELATIONSHIP_CODE,DATE_ENTERED,DATE_LEFT,REC_ACTIVE_GCT,ENTRY_DATE_TIME, ENTRY_USER_KEY,LOG_DATE_TIME, LOG_USER_KEY)
SELECT PHC.HOUSEHOLD_CLIENT_KEY, PHC.HOUSEHOLD_KEY, PHC.CLIENT_KEY, CASE WHEN STATUS IN ('A','Y') THEN 1 ELSE 0 END, RELATIONSHIP_KEY, DATE_ENTERED,DATE_LEFT,1, CREATE_DATE, CREATE_USER_KEY,UPDATE_DATE, UPDATE_USER_KEY
FROM   PATHWAY2.PATH_HOUSEHOLD_CLIENT PHC
;
UPDATE OPENHMIS.SP_LOG_TABLE SLT SET END_TIME = NOW() WHERE SLT.TABLE_NAME = 'CLIENT_HOUSEHOLD';

END$$

DELIMITER ;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.CLIENT_SP
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `CLIENT_SP`()
BEGIN
INSERT INTO OPENHMIS.SP_LOG_TABLE(TABLE_NAME, START_TIME, END_TIME) VALUES('CLIENT',NOW(), 0);

INSERT INTO OPENHMIS2.CLIENT(CLIENT_KEY,NAME_MIDDLE,NAME_LAST,NAME_FIRST,NAME_SUFFIX,SOC_SEC_TYPE_CODE,SOC_SEC_NUMBER,DOB_TYPE_CODE,DATE_OF_BIRTH,ETHNICITY_CODE,GENDER_CODE,VETERAN_STATUS_GCT,REC_ACTIVE_GCT,ENTRY_DATE_TIME,ENTRY_USER_KEY,LOG_DATE_TIME,LOG_USER_KEY)
SELECT  CLIENT_KEY, MIDDLE_NAME, LAST_NAME, FIRST_NAME, SUFFIX, ID_TYPE, IDENTIFICATION, DOB_TYPE, DATE_OF_BIRTH, ETHNICITY_KEY, GENDER_KEY, VETERAN, CASE WHEN EXISTS(SELECT * FROM PATHWAY2.PATH_HOUSEHOLD_CLIENT PHC WHERE PHC.STATUS = 'A' AND PHC.CLIENT_KEY = PC.CLIENT_KEY) THEN 1 ELSE 0 END, CREATE_DATE, CREATE_USER_KEY,UPDATE_DATE, UPDATE_USER_KEY 
FROM    PATHWAY2.PATH_CLIENT PC
;

UPDATE OPENHMIS.SP_LOG_TABLE SLT SET END_TIME = NOW() WHERE SLT.TABLE_NAME = 'CLIENT';

END$$

DELIMITER ;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.SERVICE_EVENT_SP
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SERVICE_EVENT_SP`()
BEGIN

DECLARE A TIMESTAMP;
DECLARE B TIMESTAMP;

SET A = CURRENT_TIMESTAMP;

INSERT INTO OPENHMIS.SP_LOG_TABLE VALUES('SERVICE_EVENT', A, 0);

INSERT INTO OPENHMIS2.SERVICE_EVENT(ID,CLIENT_KEY,TAXONOMY_CODE,SERVICE_DATE,OUTCOME_CODE,NOTE,REC_ACTIVE_GCT,LOG_DATE_TIME,LOG_USER_KEY)
SELECT  PCCN.CONTACT_NEED_KEY, PCCN.CLIENT_KEY, NEED_KEY, SERVICE_DATE, OUTCOME_KEY, OUTCOME_NOTE, CASE WHEN REC_ACTIVE IN ('A', 'Y') THEN 1 ELSE 0 END, CREATE_DATE, CREATE_USER_KEY
  FROM    PATHWAY2.PATH_CLIENT_CONTACT_NEED PCCN
;

SET B = CURRENT_TIMESTAMP;

UPDATE OPENHMIS.SP_LOG_TABLE SET END_TIME = B WHERE TABLE_NAME = 'SERVICE_EVENT';

END$$

DELIMITER ;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.TEST_SP
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`%` PROCEDURE `TEST_SP`()
BEGIN

DELETE FROM REPORT.PATH_COMMUNITY_TEMP_SYS_UTIL;
INSERT INTO REPORT.PATH_COMMUNITY_TEMP_SYS_UTIL( GROUP_KEY, AGENCY_KEY, SITE_KEY, PROJECT_NAME, PROGRAM_NAME_KEY, PROJECT_TYPE,BED_CAPACITY, Enrolled, Average_Enrolled, Total_Enrollment, Total_Discharges, Avg_discharge, AVERAGE_UTILIZATION, TOTAL_OF_SERVICES_program)
SELECT 2,1,1,1,1,1,2,null, null, null, null, null, null, null;
commit;
	select * from REPORT.PATH_COMMUNITY_TEMP_SYS_UTIL LIMIT 10;
END$$

DELIMITER ;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.dataQualityMainReport
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`%` PROCEDURE `dataQualityMainReport`(IN `a_key` VARCHAR(50), IN `p_Key` VARCHAR(50), IN `dataelemId` VARCHAR(600), IN `param_cols` VARCHAR(500), IN `startDate` VARCHAR(50), IN `endDate` VARCHAR(50))
BEGIN
       DECLARE a varchar(65535);
       DECLARE akey varchar(65535);
       DECLARE pkey varchar(65535);
       DECLARE rowId varchar(65535);
       DECLARE queryRace varchar(65535);
       DECLARE queryGender varchar(65535);
       DECLARE queryEthnicity varchar(65535);
       DECLARE queryVetSts varchar(65535);
       DECLARE queryPhyDis varchar(65535);
       DECLARE queryChronicHltCond varchar(65535);
       DECLARE queryHivAids varchar(65535);
       DECLARE queryMentlHlth varchar(65535);
       DECLARE querySubstncAbs varchar(65535);
       DECLARE queryDomstcViolnc varchar(65535);
       DECLARE queryHousngSts varchar(65535);
       DECLARE queryDateOfBirth varchar(65535);
       DECLARE innerQuery varchar(65535);
       set a = REPLACE(param_cols,'\'','');
       set akey = REPLACE(a_key,'\'','');
       set pkey = REPLACE(p_Key,'\'','');
       set rowId = REPLACE(dataelemId,'\'','');
       set innerQuery = '';

       set queryRace = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Race\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CR.RACE_CODE = 15 then CR.RACE_CODE end) as dk,
      count(case when CR.RACE_CODE = 16 then CR.RACE_CODE end) as Refused,
      count(case when (CR.RACE_CODE = \'\' or CR.RACE_CODE is null) then CR.RACE_CODE end) as Missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CLIENT_RACE CR,CODE_RACE COR,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY=CR.CLIENT_KEY AND
      CR.RACE_CODE = COR.CODE_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryGender = CONCAT('select distinct dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Gender\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when C.GENDER_CODE = 8 then C.GENDER_CODE end) as dk,
      count(case when C.GENDER_CODE = 9 then C.GENDER_CODE end) as Refused,
      count(case when (C.GENDER_CODE = \'\' or C.GENDER_CODE is null) then C.GENDER_CODE end) as Missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_GENDER CG,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      CG.CODE_KEY = C.GENDER_CODE AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryEthnicity = CONCAT('select distinct dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Ethnicity\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when C.ETHNICITY_CODE = 8 then C.ETHNICITY_CODE end) as dk,
      count(case when C.ETHNICITY_CODE = 9 then C.ETHNICITY_CODE end) as refused,
      count(case when (C.ETHNICITY_CODE = \'\' or C.ETHNICITY_CODE is null) then C.ETHNICITY_CODE end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_ETHNICITY CE,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      CE.CODE_KEY = C.ETHNICITY_CODE AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryVetSts = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Veteran Status\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when C.VETERAN_STATUS_GCT = 8 then C.VETERAN_STATUS_GCT end) as dk,
      count(case when C.VETERAN_STATUS_GCT = 9 then C.VETERAN_STATUS_GCT end) as refused,
      count(case when C.VETERAN_STATUS_GCT = 99 then C.VETERAN_STATUS_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_GENERAL CGe,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      CGe.CODE_KEY = C.VETERAN_STATUS_GCT AND
      C.CLIENT_KEY = PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryPhyDis = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Physical Disability\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.PHYSICAL_GCT = 8 then CDs.PHYSICAL_GCT end) as dk,
      count(case when CDs.PHYSICAL_GCT = 9 then CDs.PHYSICAL_GCT end) as refused,
      count(case when CDs.PHYSICAL_GCT = 99 then CDs.PHYSICAL_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.PHYSICAL_GCT AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryChronicHltCond = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Chronic Health Condition\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.CHRONIC_HEALTH_COND_GCT = 8 then CDs.CHRONIC_HEALTH_COND_GCT end) as dk,
      count(case when CDs.CHRONIC_HEALTH_COND_GCT = 9 then CDs.CHRONIC_HEALTH_COND_GCT end) as refused,
      count(case when CDs.CHRONIC_HEALTH_COND_GCT = 99 then CDs.CHRONIC_HEALTH_COND_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.CHRONIC_HEALTH_COND_GCT AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryHivAids = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'HIV/AIDS\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.HIVAIDS_GCT = 8 then CDs.HIVAIDS_GCT end) as dk,
      count(case when CDs.HIVAIDS_GCT = 9 then CDs.HIVAIDS_GCT end) as refused,
      count(case when CDs.HIVAIDS_GCT = 99 then CDs.HIVAIDS_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.HIVAIDS_GCT AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryMentlHlth = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Mental Health\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.MENTAL_HEALTH_GCT = 8 then CDs.MENTAL_HEALTH_GCT end) as dk,
      count(case when CDs.MENTAL_HEALTH_GCT = 9 then CDs.MENTAL_HEALTH_GCT end) as refused,
      count(case when CDs.MENTAL_HEALTH_GCT = 99 then CDs.MENTAL_HEALTH_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.MENTAL_HEALTH_GCT AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set querySubstncAbs = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Substance Abuse\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.SUBSTANCE_ABUSE_CODE = 8 then CDs.SUBSTANCE_ABUSE_CODE end) as dk,
      count(case when CDs.SUBSTANCE_ABUSE_CODE = 9 then CDs.SUBSTANCE_ABUSE_CODE end) as refused,
      count(case when CDs.SUBSTANCE_ABUSE_CODE = 99 then CDs.SUBSTANCE_ABUSE_CODE end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.SUBSTANCE_ABUSE_CODE AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryDomstcViolnc = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Domestic Violence\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.DOMES_VIOLENCE_GCT = 8 then CDs.DOMES_VIOLENCE_GCT end) as dk,
      count(case when CDs.DOMES_VIOLENCE_GCT = 9 then CDs.DOMES_VIOLENCE_GCT end) as refused,
      count(case when CDs.DOMES_VIOLENCE_GCT = 99 then CDs.DOMES_VIOLENCE_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.DOMES_VIOLENCE_GCT AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryHousngSts = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from(select \'Housing Status\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CH.HOUSEHOLD_KEY = 8 then CH.HOUSEHOLD_KEY end) as dk,
      count(case when CH.HOUSEHOLD_KEY = 9 then CH.HOUSEHOLD_KEY end) as refused,
      count(case when (CH.HOUSEHOLD_KEY = \'\' or CH.HOUSEHOLD_KEY is null) then CH.HOUSEHOLD_KEY end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,CLIENT_HOUSEHOLD CH,CODE_GENERAL CGe,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY=CH.CLIENT_KEY AND
      CH.HOUSEHOLD_KEY = CGe.CODE_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      set queryDateOfBirth = CONCAT('select dataelements,',a,' from (select z.dataelements,z.dk,z.Refused,z.Missing,z.Totalapplicableclients,((z.dk+z.Refused+z.Missing)/z.Totalapplicableclients) as total from
      (select \'Date Of Birth\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when C.DOB_TYPE_CODE = 8 then C.DOB_TYPE_CODE end) as dk,
      count(case when C.DOB_TYPE_CODE = 4 then C.DOB_TYPE_CODE end) as Refused,
      count(case when (C.DOB_TYPE_CODE = \'\' or C.DOB_TYPE_CODE is null) then C.DOB_TYPE_CODE end) as Missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
      from CLIENT C,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A,CODE_DOB_TYPE CDOB
      WHERE
      CDOB.CODE_KEY=C.DOB_tYPE_CODE AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\')z)b');

      IF(INSTR(rowId,'Race')) THEN
          set innerQuery = CONCAT(innerquery,queryRace);

      END IF;

      IF(INSTR(rowId, 'Gender')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryGender);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryGender);
          END IF;

     END IF;

     IF(INSTR(rowId, 'Ethnicity')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryEthnicity);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryEthnicity);
          END IF;

     END IF;

    IF(INSTR(rowId, 'Veteran Status')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryVetSts);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryVetSts);
          END IF;

     END IF;

     IF(INSTR(rowId, 'Physical Disability')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryPhyDis);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryPhyDis);
          END IF;

     END IF;

     IF(INSTR(rowId, 'Chronic Health Condition')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryChronicHltCond);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryChronicHltCond);
          END IF;

     END IF;

    IF(INSTR(rowId, 'HIV/AIDS')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryHivAids);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryHivAids);
          END IF;

     END IF;

    IF(INSTR(rowId, 'Mental Health')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryMentlHlth);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryMentlHlth);
          END IF;

     END IF;

    IF(INSTR(rowId, 'Substance Abuse')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,querySubstncAbs);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',querySubstncAbs);
          END IF;

     END IF;

    IF(INSTR(rowId, 'Domestic Violence')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryDomstcViolnc);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryDomstcViolnc);
          END IF;

     END IF;

    IF(INSTR(rowId, 'Housing Status')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryHousngSts);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryHousngSts);
          END IF;

     END IF;

    IF(INSTR(rowId, 'Date Of Birth')) THEN
          IF(LENGTH(innerQuery)=0) THEN
            set innerQuery = CONCAT(innerquery,queryDateOfBirth);
          ELSE
          set innerQuery = CONCAT(innerquery,' UNION ',queryDateOfBirth);
          END IF;

     END IF;

       set @Query = CONCAT('select * from (',innerQuery,') a');
      --  select innerQuery;
       prepare b from @Query;
       execute b;
END$$

DELIMITER ;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.dataQualityMainReport2
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`%` PROCEDURE `dataQualityMainReport2`(IN a_key VARCHAR(50),IN p_Key VARCHAR(50),IN data_element VARCHAR(25),IN param_cols VARCHAR(50),IN startDate VARCHAR(50),IN endDate VARCHAR(50))
BEGIN
       DECLARE a varchar(65535);
       DECLARE akey varchar(65535);
       DECLARE pkey varchar(65535);
       DECLARE abc varchar(65535);
       set a = REPLACE(param_cols,'\'','');
       set akey = REPLACE(a_key,'\'','');
       set pkey = REPLACE(p_Key,'\'','');
       set abc = REPLACE(data_element,'\'','');
       set @query = CONCAT('select dataelements,',a,' from
(select * from
(select 5 as did,\'Race\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CR.RACE_CODE = 15 then CR.RACE_CODE end) as dk,
      count(case when CR.RACE_CODE = 16 then CR.RACE_CODE end) as Refused,
      count(case when (CR.RACE_CODE = \'\' or CR.RACE_CODE is null) then CR.RACE_CODE end) as Missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CLIENT_RACE CR,CODE_RACE COR,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
C.CLIENT_KEY=CR.CLIENT_KEY AND
CR.RACE_CODE = COR.CODE_KEY AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 4 as did,\'Gender\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when C.GENDER_CODE = 8 then C.GENDER_CODE end) as dk,
      count(case when C.GENDER_CODE = 9 then C.GENDER_CODE end) as Refused,
      count(case when (C.GENDER_CODE = \'\' or C.GENDER_CODE is null) then C.GENDER_CODE end) as Missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_GENDER CG,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
CG.CODE_KEY = C.GENDER_CODE AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 6 as did,\'Ethnicity\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when C.ETHNICITY_CODE = 8 then C.ETHNICITY_CODE end) as dk,
      count(case when C.ETHNICITY_CODE = 9 then C.ETHNICITY_CODE end) as refused,
      count(case when (C.ETHNICITY_CODE = \'\' or C.ETHNICITY_CODE is null) then C.ETHNICITY_CODE end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_ETHNICITY CE,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
CE.CODE_KEY = C.ETHNICITY_CODE AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 7 as did,\'Veteran Status\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when C.VETERAN_STATUS_GCT = 8 then C.VETERAN_STATUS_GCT end) as dk,
      count(case when C.VETERAN_STATUS_GCT = 9 then C.VETERAN_STATUS_GCT end) as refused,
      count(case when C.VETERAN_STATUS_GCT = 99 then C.VETERAN_STATUS_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_GENERAL CGe,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
CGe.CODE_KEY = C.VETERAN_STATUS_GCT AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 15 as did,\'Physical Disability\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.PHYSICAL_GCT = 8 then CDs.PHYSICAL_GCT end) as dk,
      count(case when CDs.PHYSICAL_GCT = 9 then CDs.PHYSICAL_GCT end) as refused,
      count(case when CDs.PHYSICAL_GCT = 99 then CDs.PHYSICAL_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
C.CLIENT_KEY = CDs.CLIENT_KEY AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
CGe.CODE_KEY = CDs.PHYSICAL_GCT AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 16 as did,\'Chronic Health Condition\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.CHRONIC_HEALTH_COND_GCT = 8 then CDs.CHRONIC_HEALTH_COND_GCT end) as dk,
      count(case when CDs.CHRONIC_HEALTH_COND_GCT = 9 then CDs.CHRONIC_HEALTH_COND_GCT end) as refused,
      count(case when CDs.CHRONIC_HEALTH_COND_GCT = 99 then CDs.CHRONIC_HEALTH_COND_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
C.CLIENT_KEY = CDs.CLIENT_KEY AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
CGe.CODE_KEY = CDs.CHRONIC_HEALTH_COND_GCT AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 17 as did,\'HIV/AIDS\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.HIVAIDS_GCT = 8 then CDs.HIVAIDS_GCT end) as dk,
      count(case when CDs.HIVAIDS_GCT = 9 then CDs.HIVAIDS_GCT end) as refused,
      count(case when CDs.HIVAIDS_GCT = 99 then CDs.HIVAIDS_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
C.CLIENT_KEY = CDs.CLIENT_KEY AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
CGe.CODE_KEY = CDs.HIVAIDS_GCT AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 18 as did,\'Mental Health\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.MENTAL_HEALTH_GCT = 8 then CDs.MENTAL_HEALTH_GCT end) as dk,
      count(case when CDs.MENTAL_HEALTH_GCT = 9 then CDs.MENTAL_HEALTH_GCT end) as refused,
      count(case when CDs.MENTAL_HEALTH_GCT = 99 then CDs.MENTAL_HEALTH_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
C.CLIENT_KEY = CDs.CLIENT_KEY AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
CGe.CODE_KEY = CDs.MENTAL_HEALTH_GCT AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 19 as did,\'Substance Abuse\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.SUBSTANCE_ABUSE_CODE = 8 then CDs.SUBSTANCE_ABUSE_CODE end) as dk,
      count(case when CDs.SUBSTANCE_ABUSE_CODE = 9 then CDs.SUBSTANCE_ABUSE_CODE end) as refused,
      count(case when CDs.SUBSTANCE_ABUSE_CODE = 99 then CDs.SUBSTANCE_ABUSE_CODE end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
C.CLIENT_KEY = CDs.CLIENT_KEY AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
CGe.CODE_KEY = CDs.SUBSTANCE_ABUSE_CODE AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 20 as did,\'Domestic Violence\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CDs.DOMES_VIOLENCE_GCT = 8 then CDs.DOMES_VIOLENCE_GCT end) as dk,
      count(case when CDs.DOMES_VIOLENCE_GCT = 9 then CDs.DOMES_VIOLENCE_GCT end) as refused,
      count(case when CDs.DOMES_VIOLENCE_GCT = 99 then CDs.DOMES_VIOLENCE_GCT end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
C.CLIENT_KEY = CDs.CLIENT_KEY AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
CGe.CODE_KEY = CDs.DOMES_VIOLENCE_GCT AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')
UNION
select 10 as did,\'Housing Status\' as dataelements,PP.ENTRY_DATE,PP.EXIT_DATE,
      count(case when CH.HOUSEHOLD_KEY = 8 then CH.HOUSEHOLD_KEY end) as dk,
      count(case when CH.HOUSEHOLD_KEY = 9 then CH.HOUSEHOLD_KEY end) as refused,
      count(case when (CH.HOUSEHOLD_KEY = \'\' or CH.HOUSEHOLD_KEY is null) then CH.HOUSEHOLD_KEY end) as missing,
      count(case when \'Clients in Programs Only\' = \'Clients in Programs Only\' and PP.REC_ACTIVE_GCT = 1 then
      PP.CLIENT_KEY end) as Totalapplicableclients
from CLIENT C,CLIENT_HOUSEHOLD CH,CODE_GENERAL CGe,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
WHERE
C.CLIENT_KEY=CH.CLIENT_KEY AND
CH.HOUSEHOLD_KEY = CGe.CODE_KEY AND
C.CLIENT_KEY=PP.CLIENT_KEY AND
P.PROJECT_KEY = PP.PROJECT_KEY AND
A.AGENCY_KEY = P.AGENCY_KEY AND
PP.REC_ACTIVE_GCT = 1 AND
A.AGENCY_KEY IN(',akey,') AND
P.PROJECT_KEY IN(',pkey,')) c
where c.did in(',abc,') AND
c.ENTRY_DATE <= \'',endDate,'\' AND
c.EXIT_DATE >= \'',startDate,'\') b');
       prepare a from @query;
       execute a;
END$$

DELIMITER ;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.dataquality
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`%` PROCEDURE `dataquality`(IN dataelement VARCHAR(50),IN a_key VARCHAR(50),IN p_key VARCHAR(50),IN resultsOpt VARCHAR(50),IN param_cols VARCHAR(600),IN startDate VARCHAR(50),IN endDate VARCHAR(50))
BEGIN
    DECLARE a varchar(65535);
    DECLARE akey varchar(65535);
    DECLARE pkey varchar(65535);
    set a = REPLACE(param_cols,'\'','`');
    set akey = REPLACE(a_key,'\'','');
    set pkey = REPLACE(p_key,'\'','');
    IF dataelement = 'Race' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      FROM CLIENT C,CLIENT_RACE CR,CODE_RACE COR,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY=CR.CLIENT_KEY AND
      CR.RACE_CODE = COR.CODE_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (CR.RACE_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 15
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 16
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CR.RACE_CODE is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CR.RACE_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Gender' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_GENDER CG,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.GENDER_CODE = CG.CODE_KEY AND
      C.CLIENT_KEY = PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (C.GENDER_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR C.GENDER_CODE is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN C.GENDER_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Ethnicity' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_ETHNICITY CE,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      CE.CODE_KEY = C.ETHNICITY_CODE AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (C.ETHNICITY_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR C.ETHNICITY_CODE is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN C.ETHNICITY_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Veteran Status' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_GENERAL CGe,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      CGe.CODE_KEY = C.VETERAN_STATUS_GCT AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (C.VETERAN_STATUS_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR C.VETERAN_STATUS_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN C.VETERAN_STATUS_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Physical Disability' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY = PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.PHYSICAL_GCT AND
      (CDs.PHYSICAL_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.PHYSICAL_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.PHYSICAL_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Chronic Health Condition' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.CHRONIC_HEALTH_COND_GCT AND
      (CDs.CHRONIC_HEALTH_COND_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.CHRONIC_HEALTH_COND_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.CHRONIC_HEALTH_COND_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'HIV/AIDS' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.HIVAIDS_GCT AND
      (CDs.HIVAIDS_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.HIVAIDS_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.HIVAIDS_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Mental Health' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.MENTAL_HEALTH_GCT AND
      (CDs.MENTAL_HEALTH_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.MENTAL_HEALTH_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.MENTAL_HEALTH_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Substance Abuse' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.SUBSTANCE_ABUSE_CODE AND
      (CDs.SUBSTANCE_ABUSE_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.SUBSTANCE_ABUSE_CODE is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.SUBSTANCE_ABUSE_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Domestic Violence' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.DOMES_VIOLENCE_GCT AND
      (CDs.DOMES_VIOLENCE_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.DOMES_VIOLENCE_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.DOMES_VIOLENCE_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Housing Status' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,CLIENT_HOUSEHOLD CH,CODE_GENERAL CGe,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY=CH.CLIENT_KEY AND
      CH.HOUSEHOLD_KEY = CGe.CODE_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (CH.HOUSEHOLD_KEY = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CH.HOUSEHOLD_KEY is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CH.HOUSEHOLD_KEY END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');

      ELSEIF dataelement = 'Date Of Birth' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY as \'Client Key\',C.NAME_FIRST as \'First Name\',C.NAME_LAST as \'Last Name\',C.ENTRY_DATE_TIME as \'Project Entry Date\',C.ENTRY_USER_KEY as \'Entering User Key\',C.LOG_DATE_TIME as \'Project Exit Date\',(select CG.DESCRIPTION FROM CODE_GENDER CG WHERE CG.CODE_KEY = C.GENDER_CODE) as Gender,(select CE.DESCRIPTION FROM CODE_ETHNICITY CE WHERE CE.CODE_KEY = C.ETHNICITY_CODE) as Ethnicity,(select CGe.DESCRIPTION FROM CODE_GENERAL CGe WHERE CGe.CODE_KEY = C.VETERAN_STATUS_GCT) as \'Veteran Status\',(select COR.DESCRIPTION FROM CODE_RACE COR,CLIENT_RACE CR WHERE C.CLIENT_KEY = CR.CLIENT_KEY AND COR.CODE_KEY = CR.RACE_CODE)as Race,(case when C.DATE_OF_BIRTH is null then \'\' else C.DATE_OF_BIRTH end) as \'Date Of Birth\'
      from CLIENT C,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A,CODE_DOB_TYPE CDOB
      WHERE
      CDOB.CODE_KEY=C.DOB_TYPE_CODE AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (C.DOB_TYPE_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 4
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDOB.CODE_KEY is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN C.DOB_TYPE_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSE
        select 1 as one;
    END IF;
    prepare a from @query;
       execute a;
	END$$

DELIMITER ;

-- ----------------------------------------------------------------------------
-- Routine OPENHMIS2.dataqualityDrillDown
-- ----------------------------------------------------------------------------
DELIMITER $$

DELIMITER $$
USE `OPENHMIS2`$$
CREATE DEFINER=`root`@`%` PROCEDURE `dataqualityDrillDown`(IN dataelement VARCHAR(50),IN a_key VARCHAR(50),IN p_key VARCHAR(50),IN resultsOpt VARCHAR(50),IN param_cols VARCHAR(50),IN startDate VARCHAR(50),IN endDate VARCHAR(50))
BEGIN
    DECLARE a varchar(65535);
    DECLARE akey varchar(65535);
    DECLARE pkey varchar(65535);
    set a = REPLACE(param_cols,'\'','');
    set akey = REPLACE(a_key,'\'','');
    set pkey = REPLACE(p_key,'\'','');
    IF dataelement = 'Race' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      FROM CLIENT C,CLIENT_RACE CR,CODE_RACE COR,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY=CR.CLIENT_KEY AND
      CR.RACE_CODE = COR.CODE_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (CR.RACE_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 15
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 16
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CR.RACE_CODE is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CR.RACE_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Gender' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_GENDER CG,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.GENDER_CODE = CG.CODE_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (C.GENDER_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR C.GENDER_CODE is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN C.GENDER_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Ethnicity' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_ETHNICITY CE,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      CE.CODE_KEY = C.ETHNICITY_CODE AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (C.ETHNICITY_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR C.ETHNICITY_CODE is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN C.ETHNICITY_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Veteran Status' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_GENERAL CGe,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      CGe.CODE_KEY = C.VETERAN_STATUS_GCT AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (C.VETERAN_STATUS_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR C.VETERAN_STATUS_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN C.VETERAN_STATUS_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Physical Disability' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY = PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.PHYSICAL_GCT AND
      (CDs.PHYSICAL_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.PHYSICAL_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.PHYSICAL_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Chronic Health Condition' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.CHRONIC_HEALTH_COND_GCT AND
      (CDs.CHRONIC_HEALTH_COND_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.CHRONIC_HEALTH_COND_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.CHRONIC_HEALTH_COND_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'HIV/AIDS' THEN
      set @query = CONCAT('select ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.HIVAIDS_GCT AND
      (CDs.HIVAIDS_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.HIVAIDS_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.HIVAIDS_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Mental Health' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.MENTAL_HEALTH_GCT AND
      (CDs.MENTAL_HEALTH_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.MENTAL_HEALTH_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.MENTAL_HEALTH_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Substance Abuse' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.SUBSTANCE_ABUSE_CODE AND
      (CDs.SUBSTANCE_ABUSE_CODE = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.SUBSTANCE_ABUSE_CODE is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.SUBSTANCE_ABUSE_CODE END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Domestic Violence' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CODE_GENERAL CGe,CLIENT_DISABILITIES CDs,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY = CDs.CLIENT_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      CGe.CODE_KEY = CDs.DOMES_VIOLENCE_GCT AND
      (CDs.DOMES_VIOLENCE_GCT = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CDs.DOMES_VIOLENCE_GCT is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CDs.DOMES_VIOLENCE_GCT END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSEIF dataelement = 'Housing Status' THEN
      set @query = CONCAT('select distinct ',a,' from (select C.CLIENT_KEY,C.NAME_FIRST,C.NAME_LAST,C.ENTRY_DATE_TIME,C.ENTRY_USER_KEY,C.LOG_DATE_TIME
      from CLIENT C,CLIENT_HOUSEHOLD CH,CODE_GENERAL CGe,PROJECT_PARTICIPATION PP,PROJECT P, AGENCY A
      WHERE
      C.CLIENT_KEY=CH.CLIENT_KEY AND
      CH.HOUSEHOLD_KEY = CGe.CODE_KEY AND
      C.CLIENT_KEY=PP.CLIENT_KEY AND
      P.PROJECT_KEY = PP.PROJECT_KEY AND
      A.AGENCY_KEY = P.AGENCY_KEY AND
      (CH.HOUSEHOLD_KEY = CASE WHEN \'',resultsOpt,'\' = \'dk\' THEN 8
                     WHEN \'',resultsOpt,'\' = \'refused\' THEN 9
                     WHEN \'',resultsOpt,'\' = \'missing\' THEN \'\' OR CH.HOUSEHOLD_KEY is null
                     WHEN \'',resultsOpt,'\' = \'Totalapplicableclients\' THEN CH.HOUSEHOLD_KEY END) AND
      PP.REC_ACTIVE_GCT = 1 AND
      A.AGENCY_KEY IN(',akey,') AND
      P.PROJECT_KEY IN(',pkey,') AND
      PP.ENTRY_DATE <= \'',endDate,'\' AND
      PP.EXIT_DATE >= \'',startDate,'\') b');
      ELSE
        select 1 as one;
    END IF;
    prepare a from @query;
       execute a;
	END$$

DELIMITER ;
SET FOREIGN_KEY_CHECKS = 1;;
